var search_data = {"index":{"searchIndex":["object","syclink","chrome","designer","exporter","fileimporter","firefox","formatter","importer","infrastructure","internetexplorer","link","linkchecker","website","add_link()","add_link()","add_links_from_file()","contains?()","copy_file_if_missing()","create_directory_if_missing()","create_website()","cut()","delete_website()","export()","extract_columns()","extract_tags()","find_links()","find_links()","formatter_string()","html_file()","import_links()","link_attribute_list()","links()","links_duplicate_on()","links_group_by()","links_group_by_separated()","list_links()","list_links()","load_config()","load_website()","match?()","max_column_widths()","merge_links()","merge_links_on()","new()","new()","new()","new_website()","print_availability_result()","print_header()","print_horizontal_line()","print_links()","print_table()","read()","read()","read()","read()","read()","remove_link()","remove_links()","remove_links_from_file()","report_links_availability()","report_links_availability()","response()","response_of_file()","response_of_uri()","row()","rows()","rows()","rows()","save_website()","scale_widths()","set_default_website()","table()","table_of_array()","to_csv()","to_html()","to_uri()","update()","update_link()","update_links_from_file()","url_name()","yaml_file()","gemfile","gemfile.lock","license","readme","readme","rakefile","gemfile","gemfile.lock","license","readme","readme","rakefile","setup","a","ie.url","bookmarks","ie.url","ie.url","ie.url","syclink.gemspec","syclink","links","style.css","style.css.map","style.css.scss","syc-link.html","setup","a","ie.url","bookmarks","ie.url","ie.url","ie.url","syclink.gemspec","syclink","example.html","links","style.css","style.css.map","style.css.scss","syc-link.html"],"longSearchIndex":["object","syclink","syclink::chrome","syclink::designer","syclink::exporter","syclink::fileimporter","syclink::firefox","syclink::formatter","syclink::importer","syclink::infrastructure","syclink::internetexplorer","syclink::link","syclink::linkchecker","syclink::website","syclink::designer#add_link()","syclink::website#add_link()","syclink::designer#add_links_from_file()","syclink::link#contains?()","syclink::infrastructure#copy_file_if_missing()","syclink::infrastructure#create_directory_if_missing()","syclink::designer#create_website()","syclink::formatter#cut()","syclink::designer#delete_website()","syclink::designer#export()","syclink::formatter#extract_columns()","syclink::importer#extract_tags()","syclink::designer#find_links()","syclink::website#find_links()","syclink::formatter#formatter_string()","syclink::infrastructure#html_file()","syclink::designer#import_links()","syclink::website#link_attribute_list()","syclink::importer#links()","syclink::website#links_duplicate_on()","syclink::website#links_group_by()","syclink::website#links_group_by_separated()","syclink::designer#list_links()","syclink::website#list_links()","syclink::infrastructure#load_config()","syclink::designer#load_website()","syclink::link#match?()","syclink::formatter#max_column_widths()","syclink::designer#merge_links()","syclink::website#merge_links_on()","syclink::importer::new()","syclink::link::new()","syclink::website::new()","syclink::designer#new_website()","object#print_availability_result()","syclink::formatter#print_header()","syclink::formatter#print_horizontal_line()","object#print_links()","syclink::formatter#print_table()","syclink::chrome#read()","syclink::fileimporter#read()","syclink::firefox#read()","syclink::importer#read()","syclink::internetexplorer#read()","syclink::website#remove_link()","syclink::designer#remove_links()","syclink::designer#remove_links_from_file()","syclink::designer#report_links_availability()","syclink::website#report_links_availability()","syclink::linkchecker#response()","syclink::linkchecker#response_of_file()","syclink::linkchecker#response_of_uri()","syclink::link#row()","syclink::firefox#rows()","syclink::importer#rows()","syclink::website#rows()","syclink::designer#save_website()","syclink::formatter#scale_widths()","object#set_default_website()","syclink::formatter#table()","syclink::formatter#table_of_array()","syclink::exporter#to_csv()","syclink::exporter#to_html()","syclink::linkchecker#to_uri()","syclink::link#update()","syclink::designer#update_link()","syclink::designer#update_links_from_file()","syclink::importer#url_name()","syclink::infrastructure#yaml_file()","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"info":[["Object","","Object.html","",""],["SycLink","","SycLink.html","","<p>Module that creates a link list and generates an html representation\n<p>Module that creates a link list and …\n"],["SycLink::Chrome","","SycLink/Chrome.html","","<p>Importer for Google Chrome links\n<p>Importer for Google Chrome links\n"],["SycLink::Designer","","SycLink/Designer.html","","<p>Creates a designer that acts as a proxy between the user and the website.\nThe designer will create a …\n"],["SycLink::Exporter","","SycLink/Exporter.html","","<p>Methods to export data into specific formats\n<p>Methods to export data into specific formats\n"],["SycLink::FileImporter","","SycLink/FileImporter.html","",""],["SycLink::Firefox","","SycLink/Firefox.html","","<p>Importer for Firefox links\n<p>Importer for Firefox links\n"],["SycLink::Formatter","","SycLink/Formatter.html","","<p>Methods to print data in a formatted way\n<p>Methods to print data in a formatted way\n"],["SycLink::Importer","","SycLink/Importer.html","","<p>To be subclassed for link importers.\n<p>To be subclassed for link importers.\n"],["SycLink::Infrastructure","","SycLink/Infrastructure.html","","<p>Helper methods to setup the infrastructure for syclink\n<p>Helper methods to setup the infrastructure for …\n"],["SycLink::InternetExplorer","","SycLink/InternetExplorer.html","","<p>Importer for Internet Explorer\n<p>Importer for Internet Explorer\n"],["SycLink::Link","","SycLink/Link.html","","<p>Creates a link with url, name, description and tag\n<p>Creates a link with url, name, description and tag …\n"],["SycLink::LinkChecker","","SycLink/LinkChecker.html","","<p>Methods to check links for availability. A link may be an URI or a file\n<p>Methods to check links for availability. …\n"],["SycLink::Website","","SycLink/Website.html","","<p>A Website is organizing a link list. The links can be added, updated and \nremoved. It is also possible …\n"],["add_link","SycLink::Designer","SycLink/Designer.html#method-i-add_link","(url, args = {})","<p>Adds a link based on the provided arguments to the website\n"],["add_link","SycLink::Website","SycLink/Website.html#method-i-add_link","(link)","<p>Add a link to the website\n"],["add_links_from_file","SycLink::Designer","SycLink/Designer.html#method-i-add_links_from_file","(file)","<p>Reads arguments from a CSV file and creates links accordingly. The links\nare added to the websie\n"],["contains?","SycLink::Link","SycLink/Link.html#method-i-contains-3F","(search)","<p>Checks whether the search string is contained in one or more of the\nattributes. If the search string …\n"],["copy_file_if_missing","SycLink::Infrastructure","SycLink/Infrastructure.html#method-i-copy_file_if_missing","(file, to_directory)","<p>Copies a file to a target directory\n"],["create_directory_if_missing","SycLink::Infrastructure","SycLink/Infrastructure.html#method-i-create_directory_if_missing","(directory)","<p>Creates a directory if it does not exist\n"],["create_website","SycLink::Designer","SycLink/Designer.html#method-i-create_website","(directory, template_filename)","<p>Creates the html representation of the website. The website is saved to the\ndirectory with websites title …\n"],["cut","SycLink::Formatter","SycLink/Formatter.html#method-i-cut","(string, size)","<p>Cuts the string down to the specified size\n"],["delete_website","SycLink::Designer","SycLink/Designer.html#method-i-delete_website","(directory)","<p>Deletes the website if it already exists\n"],["export","SycLink::Designer","SycLink/Designer.html#method-i-export","(format)","<p>Export links to specified format\n"],["extract_columns","SycLink::Formatter","SycLink/Formatter.html#method-i-extract_columns","(rows, header)","<p>Extracts the columns to display in the table based on the header column\nnames\n"],["extract_tags","SycLink::Importer","SycLink/Importer.html#method-i-extract_tags","(tag_string)","<p>Extracts the tags from a tag string. If a level is provided during \ninitialization the level is restricting …\n"],["find_links","SycLink::Designer","SycLink/Designer.html#method-i-find_links","(search)","<p>Finds links based on a search string\n"],["find_links","SycLink::Website","SycLink/Website.html#method-i-find_links","(search)","<p>Finds all links that contain the search string\n"],["formatter_string","SycLink::Formatter","SycLink/Formatter.html#method-i-formatter_string","(widhts, separator)","<p>Creates a formatter string based on the widths and the column separator\n"],["html_file","SycLink::Infrastructure","SycLink/Infrastructure.html#method-i-html_file","(directory = '.', website)","<p>Creates an html filename to save the html representation of the website to\n"],["import_links","SycLink::Designer","SycLink/Designer.html#method-i-import_links","(importer)","<p>Accepts and SycLink::Importer to import Links and add them to the website\n"],["link_attribute_list","SycLink::Website","SycLink/Website.html#method-i-link_attribute_list","(attribute, separator = nil)","<p>List all attributes of the links\n"],["links","SycLink::Importer","SycLink/Importer.html#method-i-links","()","<p>Links returned as Link objects\n"],["links_duplicate_on","SycLink::Website","SycLink/Website.html#method-i-links_duplicate_on","(attribute, separator)","<p>Create multiple Links based on the attribute provided. The specified \nspearator will splitt the attribute …\n"],["links_group_by","SycLink::Website","SycLink/Website.html#method-i-links_group_by","(attribute, linkz = links)","<p>Groups the links on the provided attribute. If no links array is provided\nthe links from self are used …\n"],["links_group_by_separated","SycLink::Website","SycLink/Website.html#method-i-links_group_by_separated","(attribute, separator)","<p>Groups the links on the provided attribute. If the attribute&#39;s value\ncontains the provided separator, …\n"],["list_links","SycLink::Designer","SycLink/Designer.html#method-i-list_links","(args = {})","<p>List links contained in the website and optionally filter on attributes\n"],["list_links","SycLink::Website","SycLink/Website.html#method-i-list_links","(args = {})","<p>List links that match the attributes\n"],["load_config","SycLink::Infrastructure","SycLink/Infrastructure.html#method-i-load_config","(file)","<p>Loads the configuration from a file\n"],["load_website","SycLink::Designer","SycLink/Designer.html#method-i-load_website","(website)","<p>Loads a website based on the provided YAML-file and asigns it to the\ndesigner to operate on\n"],["match?","SycLink::Link","SycLink/Link.html#method-i-match-3F","(args)","<p>Checks whether the link matches the values provided by args and returns\ntrue if so otherwise false\n\n<pre>link.match?(name: ...</pre>\n"],["max_column_widths","SycLink::Formatter","SycLink/Formatter.html#method-i-max_column_widths","(columns, header, opts = {})","<p>Determines max column widths for each column based on the data and header\ncolumns.\n"],["merge_links","SycLink::Designer","SycLink/Designer.html#method-i-merge_links","()","<p>Merge links with same URL\n"],["merge_links_on","SycLink::Website","SycLink/Website.html#method-i-merge_links_on","(attribute, concat_string = ',')","<p>Merge links based on the provided attribue to one link by combining the \nvalues. The first link will …\n"],["new","SycLink::Importer","SycLink/Importer.html#method-c-new","(path_to_bookmarks, opts = {})","<p>Creates a new Importer and sets the path to the bookmarks file. Opts may be\n:level which indicates to …\n"],["new","SycLink::Link","SycLink/Link.html#method-c-new","(url, params = {})","<p>Create a new link with url and params. If params are not provided  defaults\nare used for name the url …\n"],["new","SycLink::Website","SycLink/Website.html#method-c-new","(title = \"Link List\")","<p>Create a new Website\n"],["new_website","SycLink::Designer","SycLink/Designer.html#method-i-new_website","(title = \"SYC LINK\")","<p>Creates a new website where designer can operate on\n"],["print_availability_result","Object","Object.html#method-i-print_availability_result","(result, opts)","<p>Print result of links availability check eather to STDOUT or in a table\nformat\n"],["print_header","SycLink::Formatter","SycLink/Formatter.html#method-i-print_header","(header, formatter)","<p>Prints the table&#39;s header\n"],["print_horizontal_line","SycLink::Formatter","SycLink/Formatter.html#method-i-print_horizontal_line","(line, separator, widths)","<p>Prints a horizontal line below the header\n"],["print_links","Object","Object.html#method-i-print_links","(links, columns, opts = {})","<p>Print links in table format\n"],["print_table","SycLink::Formatter","SycLink/Formatter.html#method-i-print_table","(columns, formatter)","<p>Prints columns in a table format\n"],["read","SycLink::Chrome","SycLink/Chrome.html#method-i-read","()","<p>Reads the content of the Google Chrome bookmarks file\n"],["read","SycLink::FileImporter","SycLink/FileImporter.html#method-i-read","()",""],["read","SycLink::Firefox","SycLink/Firefox.html#method-i-read","()","<p>Reads the links from the Firefox database places.sqlite\n"],["read","SycLink::Importer","SycLink/Importer.html#method-i-read","()","<p>To be overridden!  Read the raw data from the bookmarks file. The bookmarks\nfile has to be provided during …\n"],["read","SycLink::InternetExplorer","SycLink/InternetExplorer.html#method-i-read","()","<p>Reads the links from the Internet Explorer&#39;s bookmarks directory\n"],["remove_link","SycLink::Website","SycLink/Website.html#method-i-remove_link","(link)","<p>Remove a link from the website\n"],["remove_links","SycLink::Designer","SycLink/Designer.html#method-i-remove_links","(urls)","<p>Deletes one or more links from the website. Returns the deleted links.\nExpects the links provided in …\n"],["remove_links_from_file","SycLink::Designer","SycLink/Designer.html#method-i-remove_links_from_file","(file)","<p>Deletes links based on URLs that are provided in a file. Each URL has to be\nin one line\n"],["report_links_availability","SycLink::Designer","SycLink/Designer.html#method-i-report_links_availability","(opts)","<p>Check links availability. Takes a filter which values to return and whether\nto return available, unavailable …\n"],["report_links_availability","SycLink::Website","SycLink/Website.html#method-i-report_links_availability","()","<p>Check availability of links. Returns the links&#39; url  with code\n&#39;200&#39; if  reachable other …\n"],["response","SycLink::LinkChecker","SycLink/LinkChecker.html#method-i-response","()","<p>Checks whether a link is reachable. If so code &#39;200&#39; is returned\notherwise &#39;Error&#39; #response …\n"],["response_of_file","SycLink::LinkChecker","SycLink/LinkChecker.html#method-i-response_of_file","(file)","<p>Checks whether a file exists. If so it returns &#39;200&#39; otherwise\n&#39;error&#39;\n"],["response_of_uri","SycLink::LinkChecker","SycLink/LinkChecker.html#method-i-response_of_uri","(uri)","<p>Checks whether the uri is reachable. If so it returns &#39;200&#39;\notherwise &#39;Error&#39;. uri has …\n"],["row","SycLink::Link","SycLink/Link.html#method-i-row","()","<p>Return the values of the link in an array\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">link</span>.<span class=\"ruby-identifier\">row</span>\n</pre>\n"],["rows","SycLink::Firefox","SycLink/Firefox.html#method-i-rows","()","<p>Returns row values in Arrays\n"],["rows","SycLink::Importer","SycLink/Importer.html#method-i-rows","()","<p>Links values returned in an Array. Default implementation returns values\nfrom #read.\n"],["rows","SycLink::Website","SycLink/Website.html#method-i-rows","()","<p>Return an array of all link values as rows\n"],["save_website","SycLink::Designer","SycLink/Designer.html#method-i-save_website","(directory)","<p>Saves the website to the specified directory with the downcased name of the\nwebsite and the extension …\n"],["scale_widths","SycLink::Formatter","SycLink/Formatter.html#method-i-scale_widths","(widths, opts = {})","<p>Scales the widths in regard to opts and opts. If :expand is true and :width\nis set the rows are expanded …\n"],["set_default_website","Object","Object.html#method-i-set_default_website","(current, default)","<p>If current website and default website are different ask whether current\nwebsite should be set as default …\n"],["table","SycLink::Formatter","SycLink/Formatter.html#method-i-table","(rows, header, opts = {})","<p>Based on the rows (an array of Links) provided and the header values a \ntable is printed. If the options …\n"],["table_of_array","SycLink::Formatter","SycLink/Formatter.html#method-i-table_of_array","(rows, header, opts = {})","<p>Based on the rows (an array of values) provided and the header values a \ntable is printed. If the options …\n"],["to_csv","SycLink::Exporter","SycLink/Exporter.html#method-i-to_csv","()","<p>Takes an array of row values and converts them to a csv string. Expects\nthat the importing class is having …\n"],["to_html","SycLink::Exporter","SycLink/Exporter.html#method-i-to_html","(template)","<p>Creates an html file based on an erb template\n"],["to_uri","SycLink::LinkChecker","SycLink/LinkChecker.html#method-i-to_uri","(url)","<p>Transforms an URL (String) to an URI. If URL is not valid false is \nreturned\n"],["update","SycLink::Link","SycLink/Link.html#method-i-update","(args)","<p>Updates the attributes of the link specified by args and returns the\nupdated link\n\n<pre>link.update(name: &quot;Example ...</pre>\n"],["update_link","SycLink::Designer","SycLink/Designer.html#method-i-update_link","(url, args)","<p>Updates a link. The link is identified by the URL. If there is more than\none link with the same URL, …\n"],["update_links_from_file","SycLink::Designer","SycLink/Designer.html#method-i-update_links_from_file","(file)","<p>Updates links read from a file\n"],["url_name","SycLink::Importer","SycLink/Importer.html#method-i-url_name","(name_source)","<p>Create a name from the url if no name is given.\n"],["yaml_file","SycLink::Infrastructure","SycLink/Infrastructure.html#method-i-yaml_file","(directory = '.', website)","<p>Creates the filename of the website for saving, loading and deleting\n"],["Gemfile","","Gemfile.html","","<p>source &#39;rubygems.org&#39; gemspec\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  syclink (0.1.2)\n    gli (= 2.13.1)\n    sqlite3 (= 1.3.10)</pre>\n<p>GEM\n"],["LICENSE","","LICENSE.html","","<p>The MIT License (MIT)\n<p>Copyright © 2015 sugaryourcoffee\n<p>Permission is hereby granted, free of charge, …\n"],["README","","README_md.html","","<p>syclink\n<p><em>syclink</em> is a comand line application to create a website with a\nlink\ncollection. <em>syclink</em> allows ...\n"],["README","","README_rdoc.html","","<p>syclink\n<p>syclink can be used to create link list and turn them into an html \nrepresentation.\n<p>Detailed information …\n"],["Rakefile","","Rakefile.html","","<p>require &#39;rubygems/package_task&#39; spec =\neval(File.read(&#39;syclink.gemspec&#39;))\n<p>Gem::PackageTask.new(spec) …\n"],["Gemfile","","pkg/syclink-0_1_2/Gemfile.html","","<p>source &#39;rubygems.org&#39; gemspec\n"],["Gemfile.lock","","pkg/syclink-0_1_2/Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  syclink (0.1.2)\n    gli (= 2.13.1)\n    sqlite3 (= 1.3.10)</pre>\n<p>GEM\n"],["LICENSE","","pkg/syclink-0_1_2/LICENSE.html","","<p>The MIT License (MIT)\n<p>Copyright © 2015 sugaryourcoffee\n<p>Permission is hereby granted, free of charge, …\n"],["README","","pkg/syclink-0_1_2/README_md.html","","<p>syclink\n<p><em>syclink</em> is a comand line application to create a website with a\nlink\ncollection. <em>syclink</em> allows ...\n"],["README","","pkg/syclink-0_1_2/README_rdoc.html","","<p>syclink\n<p>syclink can be used to create link list and turn them into an html \nrepresentation.\n<p>Detailed information …\n"],["Rakefile","","pkg/syclink-0_1_2/Rakefile.html","","<p>require &#39;rubygems/package_task&#39; spec =\neval(File.read(&#39;syclink.gemspec&#39;))\n<p>Gem::PackageTask.new(spec) …\n"],["setup","","pkg/syclink-0_1_2/setup_md.html","","<p>Create Directory Structure\n<p>We follow the <em>RubyGems</em> convention to organize a Ruby project. We\ncreate a\ndirectory ...\n"],["a","","pkg/syclink-0_1_2/spec/syclink/fi/a_txt.html","",""],["ie.url","","pkg/syclink-0_1_2/spec/syclink/fi/c/ie_url.html","","<p>DEFAULT &mdash; BASEURL=www.example.com/base\n<p>InternetShortcut &mdash; URL=www.example.com/ IDList=\n<p>{000214A0-0000-0000-C000-000000000046} … &mdash; "],["Bookmarks","","pkg/syclink-0_1_2/spec/syclink/gc/Bookmarks.html","","<p>{\n\n<pre>&quot;checksum&quot;: &quot;d4c5b2eab81ffec9fd7ee32adc737f47&quot;,\n&quot;roots&quot;: {\n   &quot;bookmark_bar&quot;: {\n      &quot;children&quot;: [ ...</pre>\n"],["ie.url","","pkg/syclink-0_1_2/spec/syclink/ie/ie_url.html","","<p>DEFAULT &mdash; BASEURL=www.example.com/base\n<p>InternetShortcut &mdash; URL=www.example.com/ IDList=\n<p>{000214A0-0000-0000-C000-000000000046} … &mdash; "],["ie.url","","pkg/syclink-0_1_2/spec/syclink/ie/one/ie_url.html","","<p>DEFAULT &mdash; BASEURL=www.example.com/long\n<p>InternetShortcut &mdash; URL=www.example.com/ IDList=\n<p>{000214A0-0000-0000-C000-000000000046} … &mdash; "],["ie.url","","pkg/syclink-0_1_2/spec/syclink/ie/one/two/ie_url.html","","<p>DEFAULT &mdash; BASEURL=www.example.com/long\n<p>InternetShortcut &mdash; URL=www.example.com/ IDList=\n<p>{000214A0-0000-0000-C000-000000000046} … &mdash; "],["syclink.gemspec","","pkg/syclink-0_1_2/syclink_gemspec.html","","<p># Ensure we require the local version and not one we might have installed \n# already require File.join( …\n"],["syclink","","pkg/syclink-0_1_2/syclink_rdoc.html","","<p>syclink\n<p>NAME\n\n<pre>syclink - Create a link list and display it as an html page</pre>\n"],["links","","pkg/syclink-0_1_2/templates/links.html","","<p>example.com;Example;An example website;Web\nsyc.dyndns.org:8080;Secondhand;Kinderkleider- und Spielzeugbörse;Sales …\n"],["style.css","","pkg/syclink-0_1_2/templates/stylesheets/style_css.html","","<p>header#page_header {\n\n<pre>background-color: #888888;\ncolor: #fff;\nheight: 68px;\nmargin-bottom: 10px;\noverflow: ...</pre>\n"],["style.css.map","","pkg/syclink-0_1_2/templates/stylesheets/style_css_map.html","","<p>{ “version”: 3, “mappings”:\n“AAAA,kBAAmB;EACjB,gBAAgB,EAAE,OAAO;EACzB,KAAK,EAAE,IAAI;EACX,MAAM,EAAE,IAAI;EACZ,aAAa,EAAE,IAAI;EACnB,QAAQ,EAAE,MAAM;EAChB,OAAO,EAAE,SAAS;;AAGpB,kBAAmB;EACjB,gBAAgB,EAAE,OAAO;EACzB,aAAa,EAAE,kBAAkB;EACjC,KAAK,EAAE,IAAI;EACX,MAAM,EAAE,IAAI;EACZ,OAAO,EAAE,SAAS;EAClB,KAAK,EAAE,IAAI;EAEX,qBAAG;IACD,eAAe,EAAE,IAAI;IACrB,OAAO,EAAE,MAAM;IAEf,wBAAG;MACD,KAAK,EAAE,IAAI;MACX,mCAAa;QACX,KAAK,EAAE,KAAK;;AAMpB,UAAW;EACT,MAAM,EAAE,QAAQ;;AAGlB,YAAa;EACX,KAAK,EAAE,IAAI;EACX,KAAK,EAAE,GAAG;EACV,MAAM,EAAE,YAAY;;AAGtB,eAAgB;EACd,KAAK,EAAE,KAAK;EACZ,KAAK,EAAE,GAAG;EACV,MAAM,EAAE,YAAY;EACpB,kBAAG;IACD,eAAe,EAAE,IAAI;;AAIzB,CAAE;EACA,eAAe,EAAE,IAAI;EACrB,OAAQ;IACN,eAAe,EAAE,SAAS;;AAI9B,KAAM;EAAG,eAAe,EAAE,QAAQ;EAChC,KAAK,EAAE,IAAI;EAEX,kBAAO;IACL,MAAM,EAAE,IAAI;EAGd,QAAG;IACD,gBAAgB,EAAE,OAAO;IACzB,KAAK,EAAa,IAAI;EAKpB,gCAAoB;IAClB,gBAAgB,EAAE,OAAO”,\n…\n"],["style.css.scss","","pkg/syclink-0_1_2/templates/stylesheets/style_css_scss.html","","<p>header#page_header {\n\n<pre>background-color: #888888;\ncolor: #fff;\nheight: 68px;\nmargin-bottom: 10px;\noverflow: ...</pre>\n"],["syc-link.html","","pkg/syclink-0_1_2/templates/syc-link_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=“en-CA”&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&quot;utf-8&quot;&gt;\n  &lt;title&gt;SYC ...</pre>\n"],["setup","","setup_md.html","","<p>Create Directory Structure\n<p>We follow the <em>RubyGems</em> convention to organize a Ruby project. We\ncreate a\ndirectory ...\n"],["a","","spec/syclink/fi/a_txt.html","",""],["ie.url","","spec/syclink/fi/c/ie_url.html","","<p>DEFAULT &mdash; BASEURL=www.example.com/base\n<p>InternetShortcut &mdash; URL=www.example.com/ IDList=\n<p>{000214A0-0000-0000-C000-000000000046} … &mdash; "],["Bookmarks","","spec/syclink/gc/Bookmarks.html","","<p>{\n\n<pre>&quot;checksum&quot;: &quot;d4c5b2eab81ffec9fd7ee32adc737f47&quot;,\n&quot;roots&quot;: {\n   &quot;bookmark_bar&quot;: {\n      &quot;children&quot;: [ ...</pre>\n"],["ie.url","","spec/syclink/ie/ie_url.html","","<p>DEFAULT &mdash; BASEURL=www.example.com/base\n<p>InternetShortcut &mdash; URL=www.example.com/ IDList=\n<p>{000214A0-0000-0000-C000-000000000046} … &mdash; "],["ie.url","","spec/syclink/ie/one/ie_url.html","","<p>DEFAULT &mdash; BASEURL=www.example.com/long\n<p>InternetShortcut &mdash; URL=www.example.com/ IDList=\n<p>{000214A0-0000-0000-C000-000000000046} … &mdash; "],["ie.url","","spec/syclink/ie/one/two/ie_url.html","","<p>DEFAULT &mdash; BASEURL=www.example.com/long\n<p>InternetShortcut &mdash; URL=www.example.com/ IDList=\n<p>{000214A0-0000-0000-C000-000000000046} … &mdash; "],["syclink.gemspec","","syclink_gemspec.html","","<p># Ensure we require the local version and not one we might have installed \n# already require File.join( …\n"],["syclink","","syclink_rdoc.html","","<p>syclink\n<p>NAME\n\n<pre>syclink - Create a link list and display it as an html page</pre>\n"],["example.html","","templates/example_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=“en-CA”&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&quot;utf-8&quot;&gt;\n  &lt;title&gt;Test&lt;/title&gt; ...</pre>\n"],["links","","templates/links.html","","<p>example.com;Example;An example website;Web\nsyc.dyndns.org:8080;Secondhand;Kinderkleider- und Spielzeugbörse;Sales …\n"],["style.css","","templates/stylesheets/style_css.html","","<p>header#page_header {\n\n<pre>background-color: #888888;\ncolor: #fff;\nheight: 68px;\nmargin-bottom: 10px;\noverflow: ...</pre>\n"],["style.css.map","","templates/stylesheets/style_css_map.html","","<p>{ “version”: 3, “mappings”:\n“AAAA,kBAAmB;EACjB,gBAAgB,EAAE,OAAO;EACzB,KAAK,EAAE,IAAI;EACX,MAAM,EAAE,IAAI;EACZ,aAAa,EAAE,IAAI;EACnB,QAAQ,EAAE,MAAM;EAChB,OAAO,EAAE,SAAS;;AAGpB,kBAAmB;EACjB,gBAAgB,EAAE,OAAO;EACzB,aAAa,EAAE,kBAAkB;EACjC,KAAK,EAAE,IAAI;EACX,MAAM,EAAE,IAAI;EACZ,OAAO,EAAE,SAAS;EAClB,KAAK,EAAE,IAAI;EAEX,qBAAG;IACD,eAAe,EAAE,IAAI;IACrB,OAAO,EAAE,MAAM;IAEf,wBAAG;MACD,KAAK,EAAE,IAAI;MACX,mCAAa;QACX,KAAK,EAAE,KAAK;;AAMpB,UAAW;EACT,MAAM,EAAE,QAAQ;;AAGlB,YAAa;EACX,KAAK,EAAE,IAAI;EACX,KAAK,EAAE,GAAG;EACV,MAAM,EAAE,YAAY;;AAGtB,eAAgB;EACd,KAAK,EAAE,KAAK;EACZ,KAAK,EAAE,GAAG;EACV,MAAM,EAAE,YAAY;EACpB,kBAAG;IACD,eAAe,EAAE,IAAI;;AAIzB,CAAE;EACA,eAAe,EAAE,IAAI;EACrB,OAAQ;IACN,eAAe,EAAE,SAAS;;AAI9B,KAAM;EAAG,eAAe,EAAE,QAAQ;EAChC,KAAK,EAAE,IAAI;EAEX,kBAAO;IACL,MAAM,EAAE,IAAI;EAGd,QAAG;IACD,gBAAgB,EAAE,OAAO;IACzB,KAAK,EAAa,IAAI;EAKpB,gCAAoB;IAClB,gBAAgB,EAAE,OAAO”,\n…\n"],["style.css.scss","","templates/stylesheets/style_css_scss.html","","<p>header#page_header {\n\n<pre>background-color: #888888;\ncolor: #fff;\nheight: 68px;\nmargin-bottom: 10px;\noverflow: ...</pre>\n"],["syc-link.html","","templates/syc-link_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=“en-CA”&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&quot;utf-8&quot;&gt;\n  &lt;title&gt;SYC ...</pre>\n"]]}}